import React from 'react'
import Loadable from 'react-loadable';
import { getBundles } from 'react-loadable-ssr-addon';
import { renderToString } from 'react-dom/server'
import { StaticRouter } from 'react-router-dom'
import { Provider } from 'react-redux'
import { renderRoutes } from 'react-router-config'
import serialize from 'serialize-javascript'
import Routes from '../client/Routes'
import manifest from '../dist/assets-manifest.json'
// This is the stats file generated by webpack loadable plugin
//const statsFile = path.resolve('./dist/loadable-stats.json')
//console.log('statsFile', JSON.stringify(statsFile))
// We create an extractor from the statsFile
//const extractor = new ChunkExtractor({statsFile})
//console.log('extractor', JSON.stringify(extractor))
// react-loadable ssr implementation
const modules = new Set();
export default (req, store) => {
  const content = renderToString(
  <Loadable.Capture report={moduleName => modules.add(moduleName)}>
    <Provider store={store}>
      <StaticRouter location={req.path} context={{}}>
        <div>{renderRoutes(Routes)}</div>
      </StaticRouter>
    </Provider>
  </Loadable.Capture>
  );
  const modulesToBeLoaded = [...manifest.entrypoints, ...Array.from(modules)]
  const bundles = getBundles(manifest, modulesToBeLoaded)
  //console.log('extractor1', JSON.stringify(extractor))
  // You can now collect your script tags
  const styles = bundles.css || [];
  const scripts = bundles.js || [];
  return `
    <html>
      <head>
      ${styles.map(style => {
        return `<link href="/${style.file}" rel="stylesheet" />`;
      }).join('\n')}
      </head>
      <body>
        <div id="root">${content}</div>
        <script>
          window.INITIAL_STATE = ${serialize(store.getState())}
        </script>
        ${scripts.map(script => {
          return `<script src="/${script.file}"></script>`
        }).join('\n')}
      </body>
    </html>
  `;
};
